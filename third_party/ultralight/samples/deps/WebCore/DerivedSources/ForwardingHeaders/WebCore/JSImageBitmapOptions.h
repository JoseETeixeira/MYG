/*
    This file is part of the WebKit open source project.
    This file has been generated by generate-bindings.pl. DO NOT MODIFY!

    This library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Library General Public
    License as published by the Free Software Foundation; either
    version 2 of the License, or (at your option) any later version.

    This library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Library General Public License for more details.

    You should have received a copy of the GNU Library General Public License
    along with this library; see the file COPYING.LIB.  If not, write to
    the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
    Boston, MA 02110-1301, USA.
*/

#pragma once

#include "ImageBitmapOptions.h"
#include "JSDOMConvertDictionary.h"
#include "JSDOMConvertEnumeration.h"

namespace WebCore {

template<> ImageBitmapOptions convertDictionary<ImageBitmapOptions>(JSC::ExecState&, JSC::JSValue);

String convertEnumerationToString(ImageBitmapOptions::Orientation);
template<> JSC::JSString* convertEnumerationToJS(JSC::ExecState&, ImageBitmapOptions::Orientation);

template<> Optional<ImageBitmapOptions::Orientation> parseEnumeration<ImageBitmapOptions::Orientation>(JSC::ExecState&, JSC::JSValue);
template<> const char* expectedEnumerationValues<ImageBitmapOptions::Orientation>();

String convertEnumerationToString(ImageBitmapOptions::PremultiplyAlpha);
template<> JSC::JSString* convertEnumerationToJS(JSC::ExecState&, ImageBitmapOptions::PremultiplyAlpha);

template<> Optional<ImageBitmapOptions::PremultiplyAlpha> parseEnumeration<ImageBitmapOptions::PremultiplyAlpha>(JSC::ExecState&, JSC::JSValue);
template<> const char* expectedEnumerationValues<ImageBitmapOptions::PremultiplyAlpha>();

String convertEnumerationToString(ImageBitmapOptions::ColorSpaceConversion);
template<> JSC::JSString* convertEnumerationToJS(JSC::ExecState&, ImageBitmapOptions::ColorSpaceConversion);

template<> Optional<ImageBitmapOptions::ColorSpaceConversion> parseEnumeration<ImageBitmapOptions::ColorSpaceConversion>(JSC::ExecState&, JSC::JSValue);
template<> const char* expectedEnumerationValues<ImageBitmapOptions::ColorSpaceConversion>();

String convertEnumerationToString(ImageBitmapOptions::ResizeQuality);
template<> JSC::JSString* convertEnumerationToJS(JSC::ExecState&, ImageBitmapOptions::ResizeQuality);

template<> Optional<ImageBitmapOptions::ResizeQuality> parseEnumeration<ImageBitmapOptions::ResizeQuality>(JSC::ExecState&, JSC::JSValue);
template<> const char* expectedEnumerationValues<ImageBitmapOptions::ResizeQuality>();

} // namespace WebCore
